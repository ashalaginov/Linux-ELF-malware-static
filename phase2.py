print ("Phase 2")

malwareDir="ELF/"

import time
import mysql.connector
from mysql.connector import Error
from mysql.connector import errorcode
import os
import hashlib
import json
import subprocess
import timeit
import requests


apikey='YOUR_PRIVATE VT_API'

mydb = mysql.connector.connect(host='localhost',
                                     database='ELF',
                                     user='ELF',
                                     password='toor')


# Process all entries in DB that do not have VT report and not marked with `do_not_process`='`'
mycursor = mydb.cursor()
mycursor.execute("SELECT `md5` FROM rawData WHERE `file` LIKE '%ELF%' AND `virustotal_file_report` IS NULL AND (`file` LIKE '%80386%' OR `file` LIKE '%86-64%')  ORDER BY `md5` LIMIT 0,10")

myresult = mycursor.fetchall()
count=len(myresult)

vt_submitted_files=0
while count>0:
	# Number of files left to process
	mycursor.execute("SELECT COUNT(*) FROM rawData WHERE `file` LIKE '%ELF%' AND `virustotal_file_report` IS NULL AND (`file` LIKE '%80386%' OR `file` LIKE '%86-64%')")
	
	result=mycursor.fetchone()
	print("--- There are total "+str(result[0])+" left to process ---");	
	query_array=[]	

	for resource in myresult:
		query=()
		print(resource[0])
		url = 'https://www.virustotal.com/vtapi/v2/file/report'
		params = {'apikey': apikey, 'resource': resource,'allinfo':'true'}
		response = requests.get(url, params=params)
		if response.status_code == 204:
		    print("Exceeded number of requests")
		    time.sleep(600)
		    break
		# VirusTotal reports retrieval
		if response.json()['response_code'] == 1:
			#print("File report exist!")
			mydb.commit()
			query=(resource[0],json.dumps(response.json(),indent=2),json.dumps(response.json(),indent=2))  
			#print(query)
			query_array.append(query);
		#VirusTotal submittion in case if file has not be submitted beflore
		elif response.json()['response_code'] == 0:
			print("File is not in VT!")
			url = 'https://www.virustotal.com/vtapi/v2/file/scan'
			params = {'apikey': '<apikey>'}
			files = {'file': (malwareDir+'VirusShare_'+resource[0], open(malwareDir+'VirusShare_'+resource[0], 'rb'))}
			response = requests.post(url, files=files, params=params)
			vt_submitted_files+=1
		
	# Commit extracted data to MySQL DB
	if len(query_array)>0:
		sql = "INSERT IGNORE INTO rawData (md5, virustotal_file_report) VALUES (%s, %s) ON DUPLICATE KEY UPDATE virustotal_file_report=%s"
		mycursor.executemany(sql, query_array)
		mydb.commit()

	# Check if more unprocessed fles left there
	mycursor.execute("SELECT `md5` FROM rawData WHERE `file` LIKE '%ELF%' AND `virustotal_file_report` IS NULL AND (`file` LIKE '%80386%' OR `file` LIKE '%86-64%')  ORDER BY `md5` LIMIT 0,10")

	myresult = mycursor.fetchall()
	count=len(myresult)
	query_array=[]
	if count==0:
	    break

print("Files submitted to VT: "+str(vt_submitted_files))

mycursor.close()
mydb.close()
